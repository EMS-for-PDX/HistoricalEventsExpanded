pechenegs_migration_cb = {
	group = conquest
	
	allowed_for_character = { 
		has_title = title:k_pechenegs_custom
	}
	allowed_against_character = {
		has_title = title:e_caspian-pontic_steppe
	}
	allowed_for_character_display_regardless = {
		always = no
	}
	target_titles = all
	target_title_tier = kingdom
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	cost = {
		piety = {
			if = { # Attacking your HoF is impious
				limit = {
					exists = scope:attacker.faith.religious_head
					scope:attacker.faith.religious_head = scope:defender
				}
				if = {
					limit = {
						scope:attacker.faith = {
							has_doctrine = doctrine_spiritual_head
						}
					}
					add = {
						value = massive_piety_value
						desc = CB_ATTACKER_HOF
					}
				}
				else = {
					add = {
						value = medium_piety_value
						desc = CB_ATTACKER_HOF
					}
				}
			}
			if = {
				limit = {
					scope:attacker.faith = scope:defender.faith
					scope:defender = {
						has_government = theocracy_government
					}
				}
				add = {
					value = medium_piety_value
					desc = CB_ATTACKER_THEOCRACY
				}
			}
			value = 0
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = massive_piety_value
					desc = CB_SAME_FAITH_COST
				}
			}
			if = {
				limit = {
					scope:attacker = { has_government = tribal_government }
				}
				multiply = {
					value = 0.5
					desc = CB_TRIBAL_COST
				}
			}

			#Innovation Piety Discounts
			if = {
				limit = {
					scope:attacker = {
						culture = {
							has_innovation = innovation_reconquista
						}
					}
				}
				multiply = {
					value = 0.9
					desc = CB_RECONQUISTA_COST
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}

			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
		prestige = {
			value = 1000
			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Game Rules
			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
		#Emperors do not deign to migrate. Plus it'll mess up title destruction.
		scope:attacker = { highest_held_title_tier >= tier_empire }
	}

	on_invalidated = {
		scope:attacker = {
			remove_character_flag = pechenegs_20_year_cooldown
		}
	}

	on_invalidated_desc = msg_invasion_war_invalidated_message
	
	on_declaration = {
		scope:attacker = {
			add_character_flag = {
				flag = pechenegs_20_year_cooldown
				years = 20
			}
		}
		on_declared_war = yes
		scope:attacker = { # Spawn army, more troops for more legitimacy
			spawn_army = {
				name = event_troop_default_name
				levies = 1900
				men_at_arms = {
					type = light_horsemen
					stacks = 5
				}
				men_at_arms = {
					type = mangonel
					stacks = 5
				}
				men_at_arms = {
					type = mangonel
					stacks = 5
				}
				location = scope:attacker.capital_province
				inheritable = no
				uses_supply = no
			}
			if = {
				limit = { legitimacy_level >= 3 }
				spawn_army = {
					name = event_troop_default_name
					levies = 2500
					men_at_arms = {
						type = horse_archers
						stacks = 5
					}
					inheritable = no
					location = scope:attacker.capital_province
					uses_supply = no
				}
			}
			if = {
				limit = { legitimacy_level >= 4 }
				spawn_army = {
					name = event_troop_default_name
					levies = 2500
					men_at_arms = {
						type = horse_archers
						stacks = 5
					}
					inheritable = no
					location = scope:attacker.capital_province
					uses_supply = no
				}
			}
			if = {
				limit = { legitimacy_level = 5 }
				spawn_army = {
					name = event_troop_default_name
					levies = 2500
					men_at_arms = {
						type = horse_archers
						stacks = 5
					}
					inheritable = no
					location = scope:attacker.capital_province
					uses_supply = no
				}
			}
		}

		scope:attacker = {
			set_variable = {
				name = culture_province
				value = 0
			}
			every_realm_county = {
				limit = {
					culture = scope:attacker.culture				
				}
				scope:attacker = {
					change_variable = {
						name = culture_province
						add = 1
					}
				}
			}
		}
	}	

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:attacker = { is_local_player = yes }
				}
				desc = nomadic_war_victory_desc_attacker
			}
			desc = nomadic_invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = {
				scope:attacker = { is_local_player = yes }
			}
			desc = nomadic_invasion_war_warning_desc
		}
	}
	
	on_victory = {	
		if = {
			limit = {
				exists = title:k_magyar.holder 
				NOT = { exists = global_var:flag_launched_HEE_hungarian_migration }
			}
			title:k_magyar.holder = {
				save_scope_as = invader
				add_character_flag = undertaking_hungarian_migration
				trigger_event = HEE_turkic_conquerors.3000 # Global var added via event
			}
		}

		every_held_title = {
			limit = {
				tier = tier_county
			}
			save_temporary_scope_as = current_county
			create_character = {
				location = scope:current_county.title_province
				template = old_country_local_warlord_template
				save_temporary_scope_as = local_warlord
			}
			create_title_and_vassal_change = {
				type = granted
				save_scope_as = change
				add_claim_on_loss = no
			}
			hidden_effect = {
				scope:current_county = {
					change_title_holder = {
						holder = scope:local_warlord
						change = scope:change
						take_baronies = yes
					}
				}
			}
			resolve_title_and_vassal_change = scope:change
			create_title_and_vassal_change = {
				type = independency
				save_scope_as = change
				add_claim_on_loss = no
			}
			resolve_title_and_vassal_change = scope:change
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		every_in_list = {
			list = target_titles
			custom_tooltip = CONQUEST_CB_TITLE
			every_in_de_jure_hierarchy = {
				continue = {
					OR = {
						NOT = {
							exists = holder
						}
						NOT = {
							holder = {
								target_is_liege_or_above = scope:defender
							}
						}
						AND = {
							scope:attacker.faith = {
								faith_hostility_level_comparison = {
									prev.holder.faith <= scope:defender.faith
								}
							}
							holder = {
								OR = {
									this = scope:defender
									target_is_liege_or_above = scope:defender
								}
							}
						}
					}
					tier > tier_county
				}
				limit = {
					tier = tier_county
					exists = holder
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
				if = {
					limit = {
						OR = {
							scope:attacker.faith = {
								faith_hostility_level_comparison = { prev.holder.faith >= scope:defender.faith }
							}
							holder.primary_title.tier >= scope:attacker.primary_title.tier
						}
					}
					add_to_temporary_list = titles_taken
				}
				else = {
					holder = { add_to_temporary_list = vassals_taken }
				}
			}
		}
		every_in_list = {
			list = titles_taken
			change_title_holder = {
				holder = scope:attacker
				change = scope:change
				take_baronies = yes
			}
		}
		every_in_list = {
			list = vassals_taken
			change_liege = {
				liege = scope:attacker
				change = scope:change
			}
		}
		resolve_title_and_vassal_change = scope:change
		scope:attacker = {
			capital_county = {
				save_scope_as = old_capital
			}
		}
		if = {
			limit = {
				any_in_list = {
					list = target_titles
					this = duchy.title_capital_county
				}
			}
			random_in_list = {
				list = target_titles
				limit = { this = duchy.title_capital_county }
				save_temporary_scope_as = new_capital
				scope:attacker = { set_realm_capital = scope:new_capital }
			}
		}
		scope:old_capital = {
			save_temporary_scope_as = current_county
			create_character = {
				location = scope:current_county.title_province
				template = old_country_local_warlord_template
				save_temporary_scope_as = local_warlord
			}
			create_title_and_vassal_change = {
				type = usurped
				save_scope_as = change
				add_claim_on_loss = no
			}
			hidden_effect = {
				scope:current_county = {
					change_title_holder = {
						holder = scope:local_warlord
						change = scope:change
						take_baronies = yes
					}
				}
			}
			resolve_title_and_vassal_change = scope:change
			create_title_and_vassal_change = {
				type = independency
				save_scope_as = change
				add_claim_on_loss = no
			}
			resolve_title_and_vassal_change = scope:change
		}

		scope:attacker = {
			every_in_list = {
				list = target_titles
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_kingdom
					}
					save_scope_as = kingdom_title
				}
			}
			hidden_effect = {
				nomadic_migration_effect = { 
					INVADER = scope:attacker 
					TITLE_TARGET = scope:kingdom_title
				}
			}
			custom_tooltip = MIGRATION_TOOLTIP
			hidden_effect = {
				while = {
					count = var:culture_province
					random_in_list = {
						list = titles_taken
						random_in_de_jure_hierarchy = {
							limit = {
								tier = tier_county
							}
							set_county_culture = scope:attacker.culture
						}
					}
				}

				create_title_and_vassal_change = {
					type = independency
					save_scope_as = change
					add_claim_on_loss = no
				}
				becomes_independent = { change = scope:change }
				resolve_title_and_vassal_change = scope:change
			}
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			#take_occupied = yes
		}
		resolve_title_and_vassal_change = scope:change
	
		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		scope:attacker = { create_story = story_pecheneg_expansion } # Start story for Pecheneg expansion into Carpathia
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}
	
	on_defeat = {
		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 3
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = major_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige = major_prestige_value
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = medium_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}

		on_lost_aggression_war_discontent_loss = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	transfer_behavior = transfer
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = pechenegs_CONQUEST_WAR_NAME
	war_name_base = pechenegs_CONQUEST_WAR_NAME_BASE
	cb_name = pechenegs_CONQUEST_CB_NAME
	
	interface_priority = 100
}

HEE_hungarian_migration_cb = { # Altered CB to start story cycle
	icon = invasion
	group = invasion	#Switching this to event will render the CB invisible.
	ai = no # AI targeting is handled through game_rule events.

	allowed_for_character = {
		culture = culture:mogyer
		faith = { has_doctrine_parameter = unreformed }
	}

	allowed_against_character = {
		#Realm must have at least some land in Hungary.
		scope:defender = {
			any_realm_county = {
				title_province = { geographical_region = custom_hungary }
			}
		}
	}

	target_titles = all
	target_title_tier = kingdom
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder
	use_de_jure_wargoal_only = yes
	combine_into_one = yes

	#Configure war-score. This is a bit different to usual, focusing mostly on battles and almost not at all on back-capping the attacker: the Mogyers literally do not care at all if you occupy their homelands, they're moving their whole people to Pannonia anyway.

	max_attacker_score_from_battles = 200
	max_defender_score_from_battles = 200
	max_defender_score_from_occupation = 25
	max_attacker_score_from_occupation = 150
	full_occupation_by_defender_gives_victory = no
	landless_attacker_needs_armies = no
	attacker_capital_gives_war_score = no

	valid_to_start = {
		#May only target Hungary.
		scope:target = title:k_hungary
		#Must have taken the appropriate decision.
		has_character_flag = undertaking_hungarian_migration
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
		#Emperors do not deign to migrate. Plus it'll mess up title destruction.
		scope:attacker = { highest_held_title_tier >= tier_empire }
	}

	on_invalidated = {
		if = {
			limit = { exists = scope:attacker.player_heir }
			scope:attacker.player_heir = {
				if = {
					limit = {
						culture = culture:mogyer
						faith = { has_doctrine_parameter = unreformed }
					}
				}
				#Give scope:attacker back their ability to declare a migration in the event of invalidation.
				add_character_flag = undertaking_hungarian_migration
			}
		}
	}

	on_invalidated_desc = msg_invasion_war_invalidated_message

	#No cost: that's paid in the decision.
	
	on_declaration = {
		on_declared_war = yes
		#If this was fired by the AI.
		hidden_effect = {
			if = {
				limit = {
					##
				}
				add_to_global_variable_list = {
					name = unavailable_unique_decisions
					target = flag:flag_launched_hungarian_migration
				}
			}
		}
		#Give scope:attacker some armies to ensure success & use up their free invasion.
		scope:attacker = {
			remove_character_flag = undertaking_hungarian_migration
			#One army to conquer.
			spawn_army = {
				name = event_troop_default_name
				levies = 2000
				men_at_arms = {
					type = horse_archers
					stacks = 10
				}
				location = scope:attacker.capital_province
				uses_supply = no
				war = scope:war
				inheritable = no
			}
			#And one army to hold.
			spawn_army = {
				name = event_troop_default_name
				levies = 1000
				men_at_arms = {
					type = horse_archers
					stacks = 10
				}
				location = scope:attacker.capital_province
				uses_supply = no
				inheritable = no
			}
			#If we're a few decades in, beef the Mogyers a bit with another temporary army.
			if = {
				limit = { current_date >= 890.1.1 }
				spawn_army = {
					name = event_troop_default_name
					levies = 2000
					men_at_arms = {
						type = horse_archers
						stacks = 10
					}
					location = scope:attacker.capital_province
					uses_supply = no
					war = scope:war
					inheritable = no
				}
			}
			#And if we're almost out of the valid time-frame, add another holding army.
			if = {
				limit = { current_date >= 905.1.1 }
				spawn_army = {
					name = event_troop_default_name
					levies = 1000
					men_at_arms = {
						type = horse_archers
						stacks = 10
					}
					location = scope:attacker.capital_province
					uses_supply = no
					inheritable = no
				}
			}
		}
	}	

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:attacker = { is_local_player = yes }
				}
				desc = hungarian_invasion_war_victory_desc_attacker
			}
			desc = hungarian_invasion_war_victory_desc
		}
		triggered_desc = {
			trigger = {
				scope:attacker = { is_local_player = yes }
			}
			desc = hungarian_invasion_war_warning_desc
		}
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_high_effect = yes }

		#If the Mogyers aren't independent, make them so.
		if = {
			limit = {
				scope:attacker = { is_independent_ruler = no }
			}
			create_title_and_vassal_change = {
				type = independency
				save_scope_as = change
				add_claim_on_loss = no
			}
			change_liege_or_become_independent = {
				CHANGE = scope:change
				VASSAL = scope:attacker
			}
			resolve_title_and_vassal_change = scope:change
		}

		#Take lands within Pannonia.
		hidden_effect = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = yes
			}
			setup_invasion_cb = {
				titles = target_titles
				attacker = scope:attacker
				defender = scope:defender
				change = scope:change
				take_occupied = no
			}
			every_in_list = {
				list = target_titles

				# Personally seize all duchy titles in k_hungary AND duchy titles personally held by the target king.
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_duchy
						special_invasion_cb_seize_land_in_region_trigger = {
							TARGET_REGION = custom_hungary
							TARGET_KINGDOM = title:k_hungary
						}
					}
					if = {
						limit = {
							exists = holder
							holder = {
								exists = top_liege
								top_liege = scope:defender

								# Vassal players in Hungary get to keep their holdings, so they can play as vassals of the new king instead of game-overing.
								NAND = {
									NOT = { this = top_liege }
									is_ai = no
								}
							}
						}
						hidden_effect = {
							# As a security set all the county below the duchy as under transfer in case the defender owned the duchy and the counties below
							every_in_de_jure_hierarchy = {
								limit = {
									tier = tier_county
									exists = holder
									holder = scope:defender
								}
								add_to_temporary_list = county_titles_under_transfer
							}
						}
						custom_description = {
							text = custom_seize_title_and_below_de_jure
							subject = scope:attacker
							object = this
							change_title_holder = {
								holder = scope:attacker
								change = scope:change
								take_baronies = yes
							}
						}
					}
				}

				# Grab counties belonging to duchies that don't exist
				every_in_de_jure_hierarchy = {
					limit = {
						tier = tier_county
						exists = holder
						holder = {
							top_liege = scope:defender

							# Vassal players in Hungary get to keep their holdings, so they can play as vassals of the new king instead of game-overing.
							NAND = {
								NOT = { this = top_liege }
								is_ai = no
							}
						}
					}
					hidden_effect = {
						if = { 
							limit = { NOT = { is_in_list = county_titles_under_transfer } } # Theoretically prevents cases in which a title was already on the list
							add_to_temporary_list = county_titles_under_transfer
							change_title_holder = {
								holder = scope:attacker
								change = scope:change
								take_baronies = yes
							}
						}
					}
				}
			}
			resolve_title_and_vassal_change = scope:change
		}

		#Start processing the Hungarian-specific effects.
		scope:attacker = {
			launch_hungarian_migration_scripted_effect = { INVADER = scope:attacker }
		}

		#Launch Story Cycle for Hungarian invasions of Europe
		hidden_effect = {
			if = { 
				limit = { scope:attacker = { is_ai = yes } } # Only AI is governed by Story Cycle
				scope:attacker = {
					create_story = story_kalandozasok
				}
			}
		}

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		# FP1: note the victory for future memorialisation via stele (if applicable).
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		#EP2 accolade glory gain for doing ok against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }
		scope:defender = { accolade_defender_war_end_glory_gain_med_effect = yes }

		# Prestige for the attacker's war allies

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # Not important as the scales are identical
			FAME_BASE = major_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 1
			LOSER_ALLY_FAME_SCALE = 1
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = invasion_war_white_peace_desc_defender
			}
			desc = invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_high_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 5
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = scale_10_war_defender_win
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	transfer_behavior = transfer
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "HUNGARIAN_INVASION_WAR_NAME"
	war_name_base = "HUNGARIAN_INVASION_WAR_NAME_BASE"
	cb_name = "HUNGARIAN_INVASION_CB_NAME"
	
	interface_priority = 100
	
	use_de_jure_wargoal_only = yes
	
	attacker_wargoal_percentage = 0.5
}