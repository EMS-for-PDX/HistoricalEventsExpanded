seljuk_invasion_war = {
	group = invasion

	combine_into_one = yes
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	allowed_for_character = {
		AND = {
			OR = {
				AND = {
					exists = global_var:SeljukEmpireTitle
					has_title = global_var:SeljukEmpireTitle
					has_culture = culture:turkish
				}
				AND = {
					exists = global_var:GhaznavidEmpireTitle
					has_title = global_var:GhaznavidEmpireTitle
					has_culture = culture:turkish
				}
			}
		}
	}

	allowed_for_character_display_regardless = {

	}
	
	allowed_against_character = {
		scope:attacker = {
			ALL_FALSE = {
				top_liege = scope:defender.top_liege
				liege = scope:defender
			}
		}
	}
	target_titles = all
	target_title_tier = kingdom
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	ai_can_target_all_titles = {
		can_use_viking_invasion_cbs_trigger = yes
	}
	ai_score_mult = {
		value = viking_conquest_ai_score_value
	}

	valid_to_start = {
	}

	# valid_to_start_display_regardless = {
	# 	scope:target = {
	# 		any_in_de_jure_hierarchy = {
	# 			tier = tier_county
	# 			title_province = { geographical_region = special_seljuk_empire_cb_extent }
	# 		}
	# 	}
	# }

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_invalidated_desc = msg_seljuk_invasion_war_invalidated_message
	
	on_invalidated = {

	}

	cost = {
		piety = {
			value = 0
			# if = { # Attacking your HoF is impious
			# 	limit = {
			# 		exists = scope:attacker.faith.religious_head
			# 		scope:attacker.faith.religious_head = scope:defender
			# 	}
			# 	if = {
			# 		limit = {
			# 			scope:attacker.faith = {
			# 				has_doctrine = doctrine_spiritual_head
			# 			}
			# 		}
			# 		add = {
			# 			value = massive_piety_value
			# 			desc = CB_ATTACKER_HOF
			# 		}
			# 	}
			# 	else = {
			# 		add = {
			# 			value = medium_piety_value
			# 			desc = CB_ATTACKER_HOF
			# 		}
			# 	}
			# }
			if = {
				limit = {
					scope:attacker.faith = scope:defender.faith
					scope:defender = {
						has_government = theocracy_government
					}
				}
				add = {
					value = medium_piety_value
					desc = CB_ATTACKER_THEOCRACY
				}
			}
		}
		prestige = {
			add = {
				value = 2000
				desc = CB_BASE_COST
			}

			# Genghis Khan gets it for free
			if = {
				limit = { 
					scope:attacker = { 
						OR = { 
							has_character_flag = is_seljuk 
							has_character_flag = is_ghaznavid 
						} 
					}
				}
				multiply = 0
			}

			#Innovation Prestige Discounts
			if = {
				limit = {
					scope:attacker = {
						culture = {
							has_innovation = innovation_chronicle_writing
							has_innovation = innovation_land_grants
							has_innovation = innovation_rightful_ownership
						}
					}
				}
				multiply = {
					value = 0.7
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						culture = {
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_land_grants
							}
							OR = {
								has_innovation = innovation_land_grants
								has_innovation = innovation_rightful_ownership
							}
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_rightful_ownership
							}
						}
					}
				}
				multiply = {
					value = 0.8
					desc = CB_ATTACKER_INNOVATIONS
				}
			}
			else_if = {
				limit = {
					scope:attacker = {
						culture = {
							OR = {
								has_innovation = innovation_chronicle_writing
								has_innovation = innovation_land_grants
								has_innovation = innovation_rightful_ownership
							}
						}
					}
				}
				multiply = {
					value = 0.9
					desc = CB_ATTACKER_INNOVATIONS
				}
			}

			# Bellum Justum Perk
			if = {
				limit = {
					scope:attacker = {
						has_perk = bellum_justum_perk
					}
				}
				multiply = {
					add = bellum_justum_discount_percentage
					divide = 100
					desc = CB_ATTACKER_BELLUM_JUSTUM
				}
			}

			# Dynasty Warfare Perk
			if = {
				limit = {
					scope:attacker = {
						has_dynasty = yes
						dynasty = {
							has_dynasty_perk = warfare_legacy_2
						}
					}
				}
				multiply = {
					value = warfare_legacy_2_discount
					desc = CB_ATTACKER_DYNASTY_WARFARE
				}
			}

			# Vassal contract in-realm cost reduction
			if = {
				limit = {
					scope:attacker = {
						is_independent_ruler = no
						vassal_contract_has_flag = vassal_contract_war_override
						liege = scope:defender.liege
					}
				}
				multiply = {
					value = war_declaration_rights_allowed_cost_reduction
					desc = "CB_ATTACKER_VASSAL_CONTRACT"
				}
			}
			
			if = {
				limit = {
					has_game_rule = no_cost_casus_belli_costs
				}
				multiply = {
					value = 0
					desc = CB_GAME_RULE_NO_COST
				}
			}
		}
	}
	
	on_declaration = {
		on_declared_war = yes
	}	

	on_victory_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:attacker = { is_local_player = yes } }
				desc = seljuk_invasion_war_victory_desc_attacker
			}
			desc = seljuk_invasion_war_victory_desc
		}
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = yes
		}
		resolve_title_and_vassal_change = scope:change

		# Attacker gets Prestige Experience, Defender loses Prestige, all other participants gain Prestige based on their war contribution.
		modify_all_participants_fame_values = {
			WINNER = scope:attacker
			LOSER = scope:defender
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_invasion_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}

		# Truce
		add_truce_attacker_victory_effect = yes

		scope:attacker = {
			add_prestige = 1000
			add_gold = 2000
			add_dread = 3 
		}
	}

	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = seljuk_invasion_war_white_peace_desc_defender
			}
			desc = seljuk_invasion_war_white_peace_desc
		}
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = major_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Truce
		add_truce_white_peace_effect = yes

		scope:attacker = {
			add_prestige = mongol_invasion_cb_prestige_white_peace
		}
	}

	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = seljuk_invasion_war_white_peace_desc_defender
			}
			desc = seljuk_invasion_war_white_peace_desc
		}
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold = {
				gold = 5
				target = scope:defender
				yearly_income = yes
			}
			add_prestige = {
				value = massive_prestige_value
				multiply = -1.0
			}
		}
		
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			claimant = scope:claimant
			victory = no
		}

		# Attacker loses Prestige, all other war participants gain Prestige (Defender gains full prestige, all allies on both sides gain based on war contribution).
		modify_all_participants_fame_values = {
			WINNER = scope:defender
			LOSER = scope:attacker
			FAME_BASE = scope:cb_prestige_factor # Set by 'setup_claim_cb'
			IS_RELIGIOUS_WAR = no
			WINNER_FAME_SCALE = 10
			LOSER_FAME_SCALE = -10
			WINNER_ALLY_FAME_SCALE = 10
			LOSER_ALLY_FAME_SCALE = 10
		}
	
		add_truce_attacker_defeat_effect = yes
		
		scope:attacker = {
			save_temporary_scope_as = loser
		}
		on_lost_aggression_war_discontent_loss = yes
	}
	
	transfer_behavior = transfer
	
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	attacker_allies_inherit = yes
	defender_allies_inherit = yes
	
	war_name = "SELJUK_INVASION_WAR_NAME"
	war_name_base = "SELJUK_INVASION_WAR_NAME_BASE"
	cb_name = "SELJUK_INVASION_CB_NAME"
	
	interface_priority = 188
	
	use_de_jure_wargoal_only = no
	
	attacker_wargoal_percentage = 0.3
	max_attacker_score_from_battles = 80 # AI focuses a lot more on battles, so this will help finish the war more quickly

	max_ai_diplo_distance_to_title = 1000
}

# turkic_adventurer_county_conquest = {
# 	group = event

# 	combine_into_one = yes
# 	should_show_war_goal_subview = yes
# 	mutually_exclusive_titles = { always = yes }

# 	allowed_for_character = {
# 		is_ai = yes
# 	}

# 	allowed_against_character = {
# 		always = yes
# 	}
# 	target_titles = all
# 	target_title_tier = duchy
# 	target_de_jure_regions_above = yes
# 	ignore_effect = change_title_holder

# 	valid_to_start = {
# 		always = no
# 	}

# 	should_invalidate = {
# 		NOT = {
# 			any_in_list = {
# 				list = target_titles
# 				any_in_de_jure_hierarchy = {
# 					tier = tier_county
# 					holder = {
# 						target_is_same_character_or_above = scope:defender
# 					}
# 				}
# 			}
# 		}
# 	}

# 	on_invalidated_desc = msg_religious_war_invalidation_region_message
	
# 	on_invalidated = {
# 		scope:attacker = { clean_scandinavian_adventurer_effect = yes }
# 	}

# 	on_declaration = {
# 		on_declared_war = yes
# 	}

# 	on_victory_desc = {
# 		first_valid = {
# 			triggered_desc = {
# 				trigger = { scope:attacker = { is_local_player = yes } }
# 				desc = county_conquest_cb_victory_desc_attacker
# 			}
# 			desc = county_conquest_cb_victory_desc
# 		}
# 	}

# 	on_victory = {
# 		create_title_and_vassal_change = {
# 			type = conquest
# 			save_scope_as = change
# 			add_claim_on_loss = yes
# 		}

# 		# go through the dejure hierarchy under target titles, transfer titles with same or worse tolerance holders (their religion equally or less tolerated than the defender's),
# 		# take the holder as vassal otherwise and don't go deeper
# 		every_in_list = {
# 			list = target_titles
# 			custom_tooltip = CONQUEST_CB_TITLE
# 			every_in_de_jure_hierarchy = {
# 				continue = {
# 					OR = {
# 						NOT = {	exists = holder }
# 						NOT = {
# 							holder = { target_is_liege_or_above = scope:defender }
# 						}
# 						AND = {
# 							scope:attacker.faith = {
# 								faith_hostility_level_comparison = { prev.holder.faith <= scope:defender.faith }
# 							}
# 							holder = {
# 								OR = {
# 									this = scope:defender
# 									target_is_liege_or_above = scope:defender
# 								}
# 							}
# 						}
# 					}
# 					tier > tier_county
# 				}
# 				limit = {
# 					tier <= tier_duchy
# 					exists = holder
# 					holder = {
# 						OR = {
# 							this = scope:defender
# 							target_is_liege_or_above = scope:defender
# 						}
# 					}
# 				}

# 				if = {
# 					limit = {
# 						OR = {
# 							scope:attacker.faith = {
# 								faith_hostility_level_comparison = {
# 									prev.holder.faith >= scope:defender.faith
# 								}
# 							}
# 							holder.primary_title.tier >= scope:attacker.primary_title.tier
# 						}
# 					}
# 					add_to_temporary_list = titles_taken
# 				}
# 				else = {
# 					holder = {
# 						add_to_temporary_list = vassals_taken
# 					}
# 				}
# 			}
# 		}

# 		every_in_list = {
# 			list = titles_taken
# 			change_title_holder = {
# 				holder = scope:attacker
# 				change = scope:change
# 				take_baronies = yes
# 			}
# 		}

# 		every_in_list = {
# 			list = vassals_taken
# 			change_liege = {
# 				liege = scope:attacker
# 				change = scope:change
# 			}
# 		}

# 		resolve_title_and_vassal_change = scope:change

# 		# Prestige Progress for the Attacker
# 		every_in_list = {
# 			list = target_titles
# 			scope:attacker = {
# 				add_prestige_experience = medium_prestige_value
# 			}
# 		}

# 		# Prestige for the attacker's war allies
# 		add_from_contribution_attackers = {
# 			prestige = medium_prestige_value
# 			opinion = {
# 				modifier = contributed_in_war
# 			}
# 		}

# 		# Prestige for the defender's war allies
# 		add_from_contribution_defenders = {
# 			prestige = medium_prestige_value
# 			opinion = {
# 				modifier = contributed_in_war
# 			}
# 		}

# 		# Truce
# 		add_truce_attacker_victory_effect = yes

# 		#Clean-up adventurer things.
# 		scope:attacker = { clean_scandinavian_adventurer_effect = yes suleymanwarfinish = yes  }
# 	}
	

# 	on_white_peace_desc = {
# 		first_valid = {
# 			triggered_desc = {
# 				trigger = { scope:defender = { is_local_player = yes } }
# 				desc = county_conquest_cb_white_peace_desc_defender
# 			}
# 			desc = county_conquest_cb_white_peace_desc
# 		}
# 	}

# 	on_white_peace = {
# 		# Prestige loss for the attacker
# 		scope:attacker = {
# 			add_prestige = {
# 				value = minor_prestige_value
# 				multiply = -1.0
# 			}
# 		}

# 		# Prestige for the attacker's war allies
# 		add_from_contribution_attackers = {
# 			prestige = medium_prestige_value
# 			opinion = {
# 				modifier = contributed_in_war
# 			}
# 		}

# 		# Prestige for the defender's war allies
# 		add_from_contribution_defenders = {
# 			prestige = medium_prestige_value
# 			opinion = {
# 				modifier = contributed_in_war
# 			}
# 		}

# 		add_truce_white_peace_effect = yes

# 		#Clean-up adventurer things.
# 		scope:attacker = { clean_scandinavian_adventurer_effect = yes }

# 		# Since they failed to win, take away their efficacy loan.
# 		scope:attacker = { remove_short_term_gold = scandinavian_adventurer_efficacy_loan_value }
# 	}

# 	on_defeat_desc = {
# 		first_valid = {
# 			triggered_desc = {
# 				trigger = { scope:defender = { is_local_player = yes } }
# 				desc = county_conquest_cb_defeat_desc_defender
# 			}
# 			triggered_desc = {
# 				trigger = {
# 					scope:attacker = {
# 						is_local_player = yes
# 						has_targeting_faction = yes
# 					}
# 				}
# 				desc = county_conquest_cb_defeat_desc_attacker
# 			}
# 			desc = county_conquest_cb_defeat_desc
# 		}
# 	}

# 	on_defeat = {

# 		# Prestige loss for the attacker
# 		scope:attacker = {
# 			pay_short_term_gold_reparations_effect = {
# 				GOLD_VALUE = 5
# 			}
# 			add_prestige = {
# 				value = major_prestige_value
# 				multiply = -1.0
# 			}
# 		}

# 		# Prestige for Defender
# 		scope:defender = {
# 			add_prestige_war_defender_effect = {
# 				PRESTIGE_VALUE = major_prestige_value
# 			}
# 		}

# 		# Prestige for the attacker's war allies
# 		add_from_contribution_attackers = {
# 			prestige = medium_prestige_value
# 			opinion = {
# 				modifier = contributed_in_war
# 			}
# 		}

# 		# Prestige for the defender's war allies
# 		add_from_contribution_defenders = {
# 			prestige = medium_prestige_value
# 			opinion = {
# 				modifier = contributed_in_war
# 			}
# 		}

# 		add_truce_attacker_defeat_effect = yes

# 		scope:attacker = {
# 			save_temporary_scope_as = loser
# 		}

# 		on_lost_aggression_war_discontent_loss = yes

# 		scope:defender = {
# 			if = {
# 				limit = {
# 					has_variable = wasbyzantinevassal
# 				}
# 				create_title_and_vassal_change = {
# 					type = granted #or whatever
# 					save_scope_as = change
# 				}
				
# 				change_liege = {
# 					liege = title:e_byzantium.holder
# 					change = scope:change
# 				}
# 				resolve_title_and_vassal_change = scope:change
# 			}
# 		}

# 		#Clean-up adventurer things.
# 		scope:attacker = { clean_scandinavian_adventurer_effect = yes }

# 		# Since they lost, take away their efficacy loan.
# 		scope:attacker = { remove_short_term_gold = scandinavian_adventurer_efficacy_loan_value }
# 	}

# 	transfer_behavior = transfer

# 	on_primary_attacker_death = inherit
# 	on_primary_defender_death = inherit

# 	attacker_allies_inherit = yes
# 	defender_allies_inherit = yes

# 	war_name = "CONQUEST_WAR_NAME"
# 	war_name_base = "CONQUEST_WAR_NAME_BASE"
# 	cb_name = "CONQUEST_DUCHY_CB_NAME"

# 	interface_priority = 79

# 	use_de_jure_wargoal_only = yes
# 	attacker_ticking_warscore = 0.1	
# 	attacker_wargoal_percentage = 0.3
# 	attacker_score_from_occupation_scale = 250
# 	max_attacker_score_from_battles = 100

# }